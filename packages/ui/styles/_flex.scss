$justify-content-map: (
  start: flex-start,
  end: flex-end,
  center: center,
  between: space-between,
  around: space-around,
  evenly: space-evenly,
) !default;


@each $justify-key, $justify-value in $justify-content-map {
  .flex-justify-#{$justify-key} {
    justify-content: $justify-value;
  }
}


$align-items-map: (
  start: flex-start,
  end: flex-end,
  center: center,
  stretch: stretch,
  baseline: baseline,
) !default;


@each $align-key, $align-value in $align-items-map {
  .flex-align-#{$align-key} {
    align-items: $align-value;
  }
}


$flex-direction-map: (
  row: row,
  row-reverse: row-reverse,
  column: column,
  column-reverse: column-reverse,
) !default;


@each $direction-key, $direction-value in $flex-direction-map {
  .flex-#{$direction-key} {
    flex-direction: $direction-value;
  }
}


$flex-wrap-map: (
  nowrap: nowrap,
  wrap: wrap,
  wrap-reverse: wrap-reverse,
) !default;


@each $wrap-key, $wrap-value in $flex-wrap-map {
  .flex-#{$wrap-key} {
    flex-wrap: $wrap-value;
  }
}


$align-content-map: (
  start: flex-start,
  end: flex-end,
  center: center,
  space-between: space-between,
  space-around: space-around,
  space-evenly: space-evenly,
  stretch: stretch,
) !default;


@each $content-key, $content-value in $align-content-map {
  .align-content-#{$content-key} {
    align-content: $content-value;
  }
}


// Assuming a simplified set for demonstration
$flex-grow-map: (0, 1, 2) !default;
$flex-shrink-map: (0, 1, 2) !default;
// Flex basis could be defined in terms of specific values (auto, %, px) depending on your design system's needs
$flex-basis-map: (auto, 0%, 50%, 100%) !default;


@each $grow-value in $flex-grow-map {
  .flex-grow-#{$grow-value} {
    flex-grow: $grow-value;
  }
}

@each $shrink-value in $flex-shrink-map {
  .flex-shrink-#{$shrink-value} {
    flex-shrink: $shrink-value;
  }
}

// @each $basis-value in $flex-basis-map {
//   .flex-basis-#{$basis-value} {
//     flex-basis: $basis-value;
//   }
// }
//
